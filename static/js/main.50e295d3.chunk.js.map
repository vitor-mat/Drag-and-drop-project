{"version":3,"sources":["style/colors.js","components/board/style.js","components/board/index.js","components/card/style.js","assests/close_icon_x.svg","components/card/index.js","pages/kanban/style.js","pages/kanban/index.js","style/globalStyle.js","App.js","index.js"],"names":["highlightColor","backgroundColor","Container","styled","div","Board","title","children","id","prop","status","Card","deleteItemFunction","column","src","closeIconX","alt","onClick","dataKanban","JSON","parse","localStorage","getItem","items","KanbanPage","useState","cardListData","setCardListData","inputAddValue","setInputAddValue","result","a","destination","source","itemsCopy","Array","from","droppableId","index","add","splice","setItem","stringify","addNewItem","e","alert","newArray","push","name","Math","random","toFixed","toString","newArrayItems","filter","value","myInputValue","type","onChange","target","inputAddHandle","onKeyPress","key","placeholder","onDragEnd","map","data","provided","snapshot","ref","innerRef","droppableProps","className","style","background","isDraggingOver","draggableId","draggableProps","dragHandleProps","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e295d3.chunk.js","sourcesContent":["export const highlightColor = \"#fd951fcc\";\r\n\r\nexport const backgroundColor = \"#141316\";","import styled from 'styled-components';\r\n\r\nimport { backgroundColor } from '../../style/colors';\r\n\r\nexport const Container = styled.div`\r\n    background: ${backgroundColor};\r\n    border: 1px solid #fb951f11;\r\n    border-radius: 4px;\r\n    min-width: 350px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    #title-container{\r\n        h3{\r\n            font-weight: 700;\r\n            padding: 16px;\r\n            color: #fd951fcc;\r\n        }\r\n    }\r\n\r\n\r\n`","import React from 'react';\r\n\r\nimport {\r\n    Container\r\n} from './style'\r\n\r\nexport const Board = ({ title, children }) => {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <div id=\"title-container\"><h3>{title}</h3></div>\r\n            {children}\r\n        </Container>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\r\n    box-shadow: 0 2px 2px -1px #fd951fcc;\r\n    backgorund: blue;\r\n    widht: 100px;\r\n    margin: 25px 0;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    padding: 16px;\r\n\r\n    #status-div{\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        margin-bottom: 16px;\r\n\r\n        #status{\r\n            width: 30px;\r\n            height: 8px;\r\n            ${(prop) => {\r\n                if(prop.status === \"urgent\"){\r\n                    return \"background: red;\"\r\n                }else if(prop.status === \"alert\"){\r\n                    return \"background: yellow;\"\r\n                }else{\r\n                    return \"background: green;\"\r\n                }\r\n            }}\r\n        }\r\n\r\n        img{\r\n            width: 20px;\r\n            height: 20px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    border-radius: 4px;\r\n    \r\n`","export default __webpack_public_path__ + \"static/media/close_icon_x.b1caa3ff.svg\";","import React from 'react';\r\n\r\nimport { Container } from './style';\r\n\r\nimport closeIconX from '../../assests/close_icon_x.svg'\r\n\r\nexport const Card = ({ title, deleteItemFunction, id, column }) => {\r\n    return (\r\n        <Container>\r\n            <div id=\"status-div\">\r\n                <div id=\"status\"></div>\r\n                <img src={closeIconX} alt=\"close icon\" onClick={() => deleteItemFunction(id, column)}/>\r\n            </div>\r\n            {title}\r\n        </Container>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nimport { highlightColor, backgroundColor } from '../../style/colors'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: rgba(50, 50, 50);\r\n    overflow-x: hidden;\r\n\r\n    header{\r\n        width: 100%;\r\n        height: 130px;\r\n        display: grid;\r\n        grid-template-areas: \"title input\";\r\n        grid-template-row: 100%;\r\n        grid-template-columns: 65% 35%;\r\n        align-items: center;\r\n        background: ${backgroundColor};\r\n        padding-left: 70px;\r\n\r\n\r\n        h1{\r\n            width: 100%;\r\n            grid-area: title;\r\n            color: ${highlightColor};\r\n            font-size: 72px;\r\n            font-weight: 900;\r\n        }\r\n\r\n        #add-div{\r\n\r\n            grid-area: input;\r\n            height: 100%;\r\n            width: 100%;\r\n            display: flex;\r\n            gap: 20px;\r\n            align-items: center;\r\n            padding: 0 10px;\r\n\r\n            input{\r\n                width: 100%;\r\n                height: 32px;\r\n                background: none;\r\n                border: none;\r\n                outline: none;\r\n                border-bottom: 2px solid ${highlightColor};\r\n                color: ${highlightColor};\r\n                font-weight: 700;\r\n                font-size: 18px;\r\n            }\r\n\r\n            input::placeholder{\r\n                font-weight: 300;\r\n            }\r\n\r\n            button{\r\n                background: ${highlightColor};\r\n                color: ${backgroundColor};\r\n                border: none;\r\n                font-weight: 700;\r\n                width: 120px;\r\n                height: 32px;\r\n                font-size: 16px;\r\n                cursor: pointer;\r\n                transition: .2s linear;\r\n            }\r\n\r\n            button:active{\r\n                opacity: .5;\r\n            }\r\n        }\r\n\r\n        @media(max-width: 1000px){\r\n            height: 220px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            padding: 10px;\r\n\r\n            h1{\r\n                text-align: center;\r\n            }\r\n\r\n            #add-div{\r\n                padding: 0 50px;\r\n            }\r\n        }\r\n\r\n        @media(max-width: 530px){\r\n            h1{\r\n                font-size: 48px;\r\n            }\r\n\r\n            #add-div{\r\n                padding: 0 20px;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    main{\r\n        width: 100%;\r\n        flex: 1;\r\n\r\n\r\n        display: grid;\r\n        grid-template-areas: \"all\";\r\n        grid-template-column: 1fr;\r\n        grid-template-row: 1fr;\r\n\r\n        #test{\r\n            grid-area: all;\r\n            display: flex;\r\n            gap: 20px;\r\n            padding: 20px;\r\n            width: 100%;\r\n            flex: 1;\r\n            overflow: auto;\r\n\r\n            span{\r\n                widht: 100%;\r\n                padding: 0 10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    footer{\r\n        height: 70px;\r\n        width: 100%;\r\n        background: ${backgroundColor};\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        span{\r\n            color: ${highlightColor};\r\n            font-size: 18px;\r\n        }\r\n    }\r\n\r\n`","import React, { useState } from 'react';\r\n\r\nimport { Board } from '../../components/board/index'\r\nimport { Card } from '../../components/card/index';\r\n\r\n\r\nimport {\r\n    DragDropContext,\r\n    Droppable,\r\n    Draggable\r\n} from 'react-beautiful-dnd';\r\n\r\nimport {\r\n    Container\r\n} from './style';\r\n\r\nconst dataKanban = JSON.parse(localStorage.getItem(\"dataKanban3354676199304804\")) || [\r\n    {\r\n        id: \"0\",\r\n        title: \"Todo\",\r\n        items: []\r\n    },\r\n    {\r\n        id: \"1\",\r\n        title: \"In-Progress\",\r\n        items: []\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Completed\",\r\n        items: []\r\n    }\r\n]\r\n\r\nexport const KanbanPage = () => {\r\n\r\n    let [cardListData, setCardListData] = useState(dataKanban)\r\n    let [inputAddValue, setInputAddValue] = useState(\"\")\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) return;\r\n\r\n        const { source, destination } = result;\r\n\r\n        const itemsCopy = Array.from(cardListData);\r\n        let add\r\n\r\n        if (source.droppableId === destination.droppableId && source.index === destination.index) return;\r\n\r\n        if (source.droppableId === destination.droppableId && source.index !== destination.index) {\r\n            add = itemsCopy[source.droppableId].items.splice(source.index, 1)\r\n            await itemsCopy[source.droppableId].items.splice(destination.index, 0, add[0])\r\n        }\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            add = itemsCopy[source.droppableId].items.splice(source.index, 1)\r\n            await itemsCopy[destination.droppableId].items.splice(destination.index, 0, add[0])\r\n        }\r\n        await setCardListData(itemsCopy)\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n    }\r\n\r\n    const addNewItem = async (e) => {\r\n\r\n        if (!inputAddValue) {\r\n            alert(\"Error: Campo de entrada vazio!\")\r\n            return;\r\n        }\r\n\r\n        let newArray = cardListData\r\n\r\n        newArray[0].items.push({\r\n            name: inputAddValue,\r\n            status: \"eventual\",\r\n            id: ((Math.random() * 1000000).toFixed(2)).toString()\r\n        })\r\n        await setCardListData(cardListData = newArray)\r\n        setInputAddValue(inputAddValue = \"\")\r\n\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n    }\r\n\r\n    const inputAddHandle = (e) => {\r\n        setInputAddValue(inputAddValue = e.target.value)\r\n    }\r\n\r\n    const deleteItemFunction = async (id, column) => {\r\n\r\n\r\n        let newArray = cardListData\r\n\r\n        const newArrayItems = cardListData[column].items.filter((value, index) => {\r\n            if (value.id === id) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        })\r\n\r\n        newArray[column].items = newArrayItems\r\n\r\n        await setCardListData(cardListData = newArray)\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n\r\n        //forcar atualizacao do itens pro excluido sumir\r\n        const myInputValue = inputAddValue\r\n        setInputAddValue(inputAddValue = \" \")\r\n        setInputAddValue(inputAddValue = myInputValue)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <header>\r\n                <h1>Kanban Board</h1>\r\n                <div id=\"add-div\">\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={e => inputAddHandle(e)}\r\n                        value={inputAddValue}\r\n                        onKeyPress={e => {\r\n                            if (e.key === \"Enter\") {\r\n                                addNewItem()\r\n                            }\r\n                        }}\r\n                        placeholder=\"Digite Aqui\"\r\n                    />\r\n                    <button onClick={addNewItem}>Adicionar</button>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div id=\"test\">\r\n                {\r\n                    <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                        {\r\n                            cardListData.map((data, index) => {\r\n                                return (\r\n                                    <Board\r\n                                        title={data.title}\r\n                                        key={index}\r\n                                    >\r\n                                        <Droppable\r\n                                            droppableId={data.id}\r\n                                        >\r\n                                            {(provided, snapshot) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.droppableProps}\r\n                                                        className=\"dropzone-container\"\r\n                                                        style={{\r\n                                                            background: snapshot.isDraggingOver ? 'rgba(10, 255, 180, .1)' : \"\"\r\n                                                        }}\r\n                                                    >\r\n                                                        {\r\n                                                            data.items.map((value, index) => {\r\n                                                                return (\r\n                                                                    <Draggable key={`key${value.id}`} draggableId={value.id} index={index} >\r\n                                                                        {\r\n                                                                            (provided) => {\r\n                                                                                return (\r\n                                                                                    <span\r\n                                                                                        ref={provided.innerRef}\r\n                                                                                        {...provided.draggableProps}\r\n                                                                                        {...provided.dragHandleProps}\r\n                                                                                    >\r\n                                                                                        <Card\r\n                                                                                            title={value.name}\r\n                                                                                            status={value.status}\r\n                                                                                            deleteItemFunction={deleteItemFunction}\r\n                                                                                            id={value.id}\r\n                                                                                            column={data.id}\r\n                                                                                        />\r\n                                                                                    </span>\r\n                                                                                )\r\n                                                                            }\r\n                                                                        }\r\n                                                                    </Draggable>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                        {provided.placeholder}\r\n                                                    </div>\r\n                                                )\r\n                                            }}\r\n                                        </Droppable>\r\n                                    </Board>\r\n                                )\r\n                            })\r\n                        }\r\n                    </DragDropContext>\r\n                }\r\n\r\n                </div>\r\n            </main>\r\n            <footer>\r\n                <span>Make by Vitor M.</span>\r\n            </footer>\r\n        </Container>\r\n    )\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        color: white;\r\n        font-family: 'Nunito', sans-serif;\r\n        font-weight: 400;\r\n    }\r\n`","import React from 'react';\n\nimport { KanbanPage } from './pages/kanban/index'\n\nimport { GlobalStyle } from './style/globalStyle'\n\nconst App = () => {\n  return(\n    <>\n      <GlobalStyle />\n      <KanbanPage />\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}