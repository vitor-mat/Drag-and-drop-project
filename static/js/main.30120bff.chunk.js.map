{"version":3,"sources":["style/globalStyle.js","style/colors.js","pages/kanban_page/style.js","components/card/style.js","assets/images/close_icon_x.svg","components/card/index.js","pages/kanban_page/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","highlightColor","backgroundColor","Container","styled","div","props","status","Card","name","deleteItemFunction","id","column","className","src","closeIconX","alt","onClick","dataKanban","JSON","parse","localStorage","getItem","title","items","KanbanPage","useState","cardListData","setCardListData","inputAddValue","setInputAddValue","result","a","destination","source","itemsCopy","Array","from","droppableId","index","add","splice","setItem","stringify","addNewItem","e","alert","newArray","push","Math","random","toFixed","toString","newArrayItems","filter","value","myInputValue","type","placeholder","onChange","target","inputAddHandle","onKeyPress","key","onDragEnd","map","data","provided","snapshot","ref","innerRef","droppableProps","style","background","isDraggingOver","draggableId","draggableProps","dragHandleProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30120bff.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        color: white;\r\n        font-family: 'Nunito', sans-serif;\r\n        font-weight: 400;\r\n        overflow-x: hidden;\r\n    }\r\n    \r\n    body::-webkit-scrollbar {\r\n        width: 14px;\r\n      }\r\n      \r\n    body::-webkit-scrollbar-track {\r\n        background: rgba(20, 19, 22, .4);\r\n    }\r\n      \r\n    body::-webkit-scrollbar-thumb {\r\n        background: rgba(20, 19, 22, .7);\r\n        border-radius: 20px;\r\n    }\r\n`","export const highlightColor = \"#fd951fcc\";\r\n\r\nexport const backgroundColor = \"#141316\";","import styled from 'styled-components'\r\n\r\nimport { backgroundColor, highlightColor } from '../../style/colors'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background: ${backgroundColor};\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    header{\r\n        width: 100%;\r\n        height:200px;\r\n        display: grid;\r\n        grid-template-areas: \"title input\";\r\n        grid-template-rows: auto;\r\n        grid-template-columns: 40% 60%;\r\n        align-items: center;\r\n        padding-left: 70px;\r\n\r\n        h1{\r\n            width: 100%;\r\n            grid-area: title;\r\n            color: ${highlightColor};\r\n            font-size: 72px;\r\n            font-weight: 900;\r\n        }\r\n\r\n        #add-div{\r\n            grid-area: input;\r\n            width: 100%;\r\n            height: 100px;\r\n            display: flex;\r\n            gap: 20px;\r\n            align-items: center;\r\n            padding: 0 10px;\r\n\r\n            input{\r\n                width: 100%;\r\n                height: 32px;\r\n                background: none;\r\n                border: none;\r\n                outline: none;\r\n                border-bottom: 2px solid ${highlightColor};\r\n                color: ${highlightColor};\r\n                font-weight: 700;\r\n                font-size: 18px;\r\n            }\r\n\r\n            input::placeholder{\r\n                font-weight: 300;\r\n            }\r\n\r\n            button{\r\n                background: ${highlightColor};\r\n                color: ${backgroundColor};\r\n                border: none;\r\n                font-weight: 700;\r\n                width: 120px;\r\n                height: 32px;\r\n                cursor: pointer;\r\n                transition: 2s linear;\r\n            }\r\n\r\n            button:active{\r\n                opacity: .5;\r\n            }\r\n        }\r\n\r\n        @media(max-width: 900px){\r\n            height: 250px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 10px;\r\n            padding: 20px 0;\r\n\r\n            h1{\r\n                width: 100%;\r\n                height: 130px;\r\n                text-align: center;\r\n            }\r\n\r\n            #add-div{\r\n                width: 100%;\r\n                padding: 0 30px;\r\n            }\r\n        }\r\n\r\n        @media(max-width: 540px){\r\n            h1{\r\n                font-size: 48px;\r\n                height: 90px;\r\n            }\r\n\r\n        }\r\n\r\n        @media(max-width: 360px){\r\n\r\n            height: 190px;\r\n\r\n            h1{\r\n                font-size: 40px;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    main{\r\n        width: 100%;\r\n        flex: 1;        \r\n        display: grid;\r\n        grid-template-areas: \"nada all caquinha\";\r\n        grid-template-column: 5px / 1fr / 5px;\r\n        grid-template-row: 1fr;\r\n        justify-content: center;\r\n        margin-bottom: 5px;\r\n        background: rgb(50, 50, 50);\r\n\r\n        #dragdrop-container-div{\r\n            grid-area: all;\r\n            display: flex;\r\n            gap: 20px;\r\n            padding: 20px;\r\n            overflow-x: auto;\r\n            span{\r\n                widht: 100%;\r\n                padding: 0 10px;\r\n            }\r\n        }\r\n\r\n        #dragdrop-container-div::-webkit-scrollbar {\r\n            width: 2px;\r\n          }\r\n          \r\n        #dragdrop-container-div::-webkit-scrollbar-track {\r\n            background: rgba(20, 19, 22, .4);\r\n        }\r\n          \r\n        #dragdrop-container-div::-webkit-scrollbar-thumb {\r\n            background: rgba(20, 19, 22, .7);\r\n            border-radius: 20px;\r\n        }\r\n\r\n        .board{\r\n            background: ${backgroundColor};\r\n            width: 350px;\r\n            min-width: 350px;\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            padding: 10px 20px;\r\n            gap: 50px;\r\n\r\n            .title-board-div{\r\n                width: 100%;\r\n                text-align: center;\r\n                \r\n                h3{\r\n                    color: ${highlightColor};\r\n                }\r\n            }\r\n\r\n            .dropzone-container{\r\n                width: 100%;\r\n                min-height: 250px;\r\n                overflow: hidden;\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    footer{\r\n        height: 70px;\r\n        width: 100%;\r\n        background: ${backgroundColor};\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        span{\r\n            color: ${highlightColor};\r\n            font-size: 18px;\r\n        }\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nimport { highlightColor } from '../../style/colors';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    min-height: 70px;\r\n    text-align: justify;\r\n    border-bottom: 2px solid ${highlightColor};\r\n    margin-bottom: 35px;\r\n    padding: 10px 0 20px;\r\n    word-break: break-word;\r\n\r\n    .close-icon-div{\r\n        width: 100%;\r\n\r\n        margin-bottom: 20px;\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .status{\r\n            width: 25px;\r\n            height: 8px;\r\n            ${(props) => {\r\n                if(props.status === \"Todo\"){\r\n                    return \"background: #F08080;\"\r\n                }else if(props.status === \"In-Progress\"){\r\n                    return \"background: lightblue;\"\r\n                }else{\r\n                    return \"background: lightgreen;\"\r\n                }\r\n            }}\r\n        }\r\n\r\n        #close-icon-img{\r\n            width: 20px;\r\n            height: 20px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/close_icon_x.b1caa3ff.svg\";","import React from 'react';\r\n\r\nimport {\r\n    Container\r\n} from './style';\r\n\r\nimport closeIconX from \"../../assets/images/close_icon_x.svg\"\r\n\r\nexport const Card = ({ name, deleteItemFunction, id, column, status }) => {\r\n    return(\r\n        <Container status={status}>\r\n            <div className=\"close-icon-div\">\r\n                <div className=\"status\"></div>\r\n                <img\r\n                    src={closeIconX}\r\n                    alt=\"close icon\"\r\n                    id=\"close-icon-img\"\r\n                    onClick={() => deleteItemFunction(id, column)}\r\n                />\r\n            </div>\r\n            {name}\r\n        </Container>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n    Container\r\n} from './style';\r\n\r\nimport {\r\n    DragDropContext,\r\n    Droppable,\r\n    Draggable\r\n} from 'react-beautiful-dnd';\r\n\r\nimport { Card } from '../../components/card/index';\r\n\r\nconst dataKanban = JSON.parse(localStorage.getItem(\"dataKanban3354676199304804\")) || [\r\n    {\r\n        id: \"0\",\r\n        title: \"Todo\",\r\n        items: []\r\n    },\r\n    {\r\n        id: \"1\",\r\n        title: \"In-Progress\",\r\n        items: []\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Completed\",\r\n        items: []\r\n    }\r\n]\r\n\r\nexport const KanbanPage = () => {\r\n\r\n    let [cardListData, setCardListData] = useState(dataKanban)\r\n\r\n    let [inputAddValue, setInputAddValue] = useState(\"\")\r\n\r\n\r\n    async function handleOnDragEnd(result) {\r\n\r\n        if (!result.destination) return;\r\n\r\n        const { source, destination } = result;\r\n\r\n        const itemsCopy = Array.from(cardListData);\r\n        let add\r\n\r\n        if (source.droppableId === destination.droppableId && source.index === destination.index) return;\r\n\r\n        if (source.droppableId === destination.droppableId && source.index !== destination.index) {\r\n            add = itemsCopy[source.droppableId].items.splice(source.index, 1)\r\n            await itemsCopy[source.droppableId].items.splice(destination.index, 0, add[0])\r\n        }\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n            add = itemsCopy[source.droppableId].items.splice(source.index, 1)\r\n            await itemsCopy[destination.droppableId].items.splice(destination.index, 0, add[0])\r\n        }\r\n        await setCardListData(itemsCopy)\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n    }\r\n\r\n    const addNewItem = async (e) => {\r\n\r\n        if (!inputAddValue) {\r\n            alert(\"Error: Campo de entrada vazio!\")\r\n            return;\r\n        }\r\n\r\n        let newArray = cardListData\r\n\r\n        newArray[0].items.push({\r\n            name: inputAddValue,\r\n            status: \"eventual\",\r\n            id: ((Math.random() * 1000000).toFixed(2)).toString()\r\n        })\r\n        await setCardListData(cardListData = newArray)\r\n        setInputAddValue(inputAddValue = \"\")\r\n\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n    }\r\n\r\n    const inputAddHandle = (e) => {\r\n        setInputAddValue(inputAddValue = e.target.value)\r\n    }\r\n\r\n    const deleteItemFunction = async (id, column) => {\r\n\r\n\r\n        let newArray = cardListData\r\n\r\n        const newArrayItems = cardListData[column].items.filter((value, index) => {\r\n            if (value.id === id) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        })\r\n\r\n        newArray[column].items = newArrayItems\r\n\r\n        await setCardListData(cardListData = newArray)\r\n        localStorage.setItem(\"dataKanban3354676199304804\", JSON.stringify(cardListData))\r\n\r\n        //forcar atualizacao do itens pro excluido sumir\r\n        const myInputValue = inputAddValue\r\n        setInputAddValue(inputAddValue = \" \")\r\n        setInputAddValue(inputAddValue = myInputValue)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <header>\r\n                <h1>Kanban Board</h1>\r\n                <div id=\"add-div\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"DigiteAqui\"\r\n                        onChange={e => inputAddHandle(e)}\r\n                        value={inputAddValue}\r\n                        onKeyPress={e => {\r\n                            if (e.key === \"Enter\") {\r\n                                addNewItem()\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button onClick={addNewItem}>Adicionar</button>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <DragDropContext  onDragEnd={handleOnDragEnd}>\r\n                    <div id=\"dragdrop-container-div\">\r\n                    {\r\n                        cardListData.map((data, index) => {\r\n                            return (\r\n                                <div className=\"board\" key={index}>\r\n                                    <div className=\"title-board-div\">\r\n                                        <h3 className=\"title-board-text\">\r\n                                            {data.title}\r\n                                        </h3>\r\n                                    </div>\r\n                                    <Droppable droppableId={data.id} id=\"droppable\">\r\n                                        {(provided, snapshot) => {\r\n                                            return (\r\n                                                <div\r\n                                                    ref={provided.innerRef}\r\n                                                    {...provided.droppableProps}\r\n                                                    className=\"dropzone-container\"\r\n                                                    style={{\r\n                                                        background: snapshot.isDraggingOver ? 'rgba(10, 255, 180, .1)' : \"\"\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        data.items.map((value, index) => {\r\n                                                            return (\r\n                                                                <Draggable\r\n                                                                key={`key${value.id}`}\r\n                                                                draggableId={value.id}\r\n                                                                index={index}\r\n                                                                >\r\n                                                                    {(provided) => {\r\n                                                                        return (\r\n                                                                            <div\r\n                                                                                ref={provided.innerRef}\r\n                                                                                {...provided.draggableProps}\r\n                                                                                {...provided.dragHandleProps}\r\n                                                                            >\r\n                                                                                <Card \r\n                                                                                    name={value.name}\r\n                                                                                    deleteItemFunction={deleteItemFunction}\r\n                                                                                    id={value.id}\r\n                                                                                    column={data.id}\r\n                                                                                    status={data.title} \r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    }}\r\n                                                                </Draggable>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    {provided.placeholder}\r\n                                                </div>\r\n                                            )\r\n                                        }}\r\n                                    </Droppable>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    </div>\r\n                </DragDropContext>\r\n            </main>\r\n            <footer>\r\n                <span>Make by Vitor M.</span>\r\n            </footer>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\n\nimport { GlobalStyle } from './style/globalStyle'\n\nimport { KanbanPage } from './pages/kanban_page/index'\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <KanbanPage />\n    </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}